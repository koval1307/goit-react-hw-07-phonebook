{"version":3,"sources":["components/contactsList/contacts-list.module.css","global.module.css","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","redux/contacts-operations.js","components/Notification/Notification.js","components/form/Form.js","redux/contacts-selectors.js","components/contactListItem/contactListItem.js","components/contactsList/contactsList.js","components/filter/Filter.js","components/appTitle/AppTitle.js","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSucess","addContactError","fetchContactsRequest","fetchContactsSucess","fetchContactsError","deleteContactsRequest","deleteContactsSucess","deleteContactsError","getFilter","items","createReducer","contactActions","state","action","payload","filter","contact","id","contactsActions","loading","_","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contacts","contactsReducer","devTools","process","middleware","addContact","data","dispatch","axios","post","then","response","console","log","catch","error","fetchContacts","get","deleteContact","delete","Notification","CSSTransition","className","Form","name","number","notification","handleChange","target","value","setState","getContact","e","preventDefault","props","find","el","uuidv4","onAddContact","this","onSubmit","TextField","type","onChange","required","Button","variant","color","in","unmountOnExit","timeout","classNames","onEntered","Component","mapDispatchToProps","contactsOperations","connect","getItems","getExistingContacts","createSelector","toLowerCase","includes","getContactById","contactId","item","ownProps","contactsSelectors","styles","contactList__item","tel","btn","onClick","contactList","TransitionGroup","component","contact__list","map","key","mapDispatctToProps","getFilterName","AppTitle","appear","App","onFetchContacts","wrapper","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ca1b909.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"contacts-list_contact__list__1CVI9\",\"btn\":\"contacts-list_btn__fKySI\",\"contactList__item\":\"contacts-list_contactList__item__3TUPM\",\"name\":\"contacts-list_name__2JGh4\",\"contacts\":\"contacts-list_contacts__PpsPU\",\"enter\":\"contacts-list_enter__swGwa\",\"enterActive\":\"contacts-list_enterActive__24uOt\",\"exit\":\"contacts-list_exit__36oV5\",\"exitActive\":\"contacts-list_exitActive__1rDDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"global_wrapper__327cc\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContactRequest = createAction('contacts/addRequest');\nconst addContactSucess = createAction('contacts/addSucess');\nconst addContactError = createAction('contacts/addError');\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSucess = createAction('contacts/fetchSucess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\nconst deleteContactsRequest = createAction('contacts/deleteRequest');\nconst deleteContactsSucess = createAction('contacts/deletSucess');\nconst deleteContactsError = createAction('contacts/deleteError');\n\n\nconst getFilter = createAction('contacts/filter');\n\nexport default {\n  deleteContactsRequest,\n  deleteContactsSucess,\n  deleteContactsError,\n  getFilter,\n  addContactRequest,\n  addContactSucess,\n  addContactError,\n  fetchContactsSucess,\n  fetchContactsRequest,\n  fetchContactsError,\n};\n","import { combineReducers } from \"redux\";\nimport contactActions from \"./contacts-actions\"\nimport {createReducer} from \"@reduxjs/toolkit\"\nimport contactsActions from \"./contacts-actions\";\nconst addContacts = (state, action) => [...state, action.payload];\nconst onDeleteContacts = (state, action) =>\n    state.filter(contact => contact.id !== action.payload)\n\n\nconst items = createReducer([], {\n  [contactActions.addContactSucess]: addContacts ,\n  [contactActions.deleteContactsSucess]: onDeleteContacts,\n  [contactsActions.fetchContactsSucess]: (state, action) => action.payload\n  \n});\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSucess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactsRequest]: () => true,\n  [contactsActions.deleteContactsSucess]: () => false,\n  [contactsActions.deleteContactsError]: () => false,\n});\nconst filter = createReducer(\" \", {\n  [contactActions.getFilter]: (_, action) => action.payload,\n});\n\n\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers} from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\"\nimport {configureStore,getDefaultMiddleware} from \"@reduxjs/toolkit\"\nimport contactsReducer from \"./contacts-reducer\";\n\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst defaultMiddleware = getDefaultMiddleware()\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\nmiddleware : [...defaultMiddleware]\n});\n\nexport default store","import contactActions from \"./contacts-actions\"\nimport axios from 'axios'\nimport contactsActions from \"./contacts-actions\";\n\nconst addContact = data => dispatch => {\n    dispatch(contactsActions.addContactRequest())\n    axios.post('http://127.0.0.1:2000/contacts', { ...data })\n        .then(response => {\n            console.log(response.data)\n            dispatch(contactsActions.addContactSucess(response.data))\n        })\n    .catch (error => dispatch(contactsActions.addContactError(error)))\n};\n\nconst fetchContacts = () => dispatch => {\n    dispatch(contactsActions.fetchContactsRequest());\n    axios.get('http://127.0.0.1:2000/contacts')\n        .then(({ data }) => dispatch(contactsActions.fetchContactsSucess(data)))\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)))\n}\n\nconst deleteContact = id => dispatch => {\n    dispatch(contactsActions.deleteContactsRequest())\n    axios\n      .delete(`http://127.0.0.1:2000/contacts/${id}`)\n\n      .then(() => dispatch(contactsActions.deleteContactsSucess(id)))\n      .catch(error => dispatch(contactsActions.deleteContactsError(error)));\n}\n\nexport  default {\n    addContact,\n    fetchContacts,\n    deleteContact\n}","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./notification.css\";\n\nexport default Notification = () => {\n  return (\n    <CSSTransition>\n      <p className=\"notification\">This contact is already exists</p>\n    </CSSTransition>\n  );\n};\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {connect}   from \"react-redux\"\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport contactsOperations from \"../../redux/contacts-operations\"\nimport Notification from \"../Notification/Notification\";\nimport { CSSTransition} from \"react-transition-group\";\n\nimport \"../Notification/notification.css\";\n\nclass Form extends Component {\n  state = {\n    name: \" \",\n    number: \" \",\n    notification: false,\n  };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  getContact = (e) => {\n    e.preventDefault();\n    if (\n      this.props.state.contacts.items.find((el) => el.name === this.state.name)\n    ) {\n      this.setState({ notification: true, name: \" \", number: \" \" });\n    } else {\n      const contact = {\n        name: this.state.name,\n        number: this.state.number,\n        id: uuidv4,\n      };\n      this.props.onAddContact(contact);\n      this.setState({ name: \" \", number: \" \" });\n    }\n\n  };\n\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.getContact}>\n          <h2>Name</h2>\n\n          <label>\n            Name:\n            <TextField\n              id=\"outlined-basic\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Phone number:\n            <TextField\n          type='tel'\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Add Contact\n          </Button>\n        </form>\n        <CSSTransition\n          in={this.state.notification}\n          unmountOnExit\n          timeout={2000}\n          classNames=\"notification\"\n          onEntered={() => this.setState({ notification: false })}\n        >\n          <Notification />\n        </CSSTransition>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n return {state}\n}\n\nconst mapDispatchToProps = {\nonAddContact:contactsOperations.addContact\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { createSelector } from '@reduxjs/toolkit';\n\n\nconst getItems = state => state.contacts.items\nconst loading = state => state.contacts.loading\nconst getFilter = state => state.contacts.filter\n\n\n\n\n  const getExistingContacts = createSelector(\n    [getFilter, getItems],\n    (filter, items) => {\n     const existingContacts = items.filter(contact =>\n       contact.name.toLowerCase().includes(filter.toLowerCase()),\n     );\n      return existingContacts\n    },\n  );\n\nconst getContactById = (state, contactId) => {\n    const items = getItems(state);\n\n    return items.find(item => item.id === contactId)\n}\n\n\nexport default {\n    getFilter,\n    getItems,\n    getExistingContacts,\n    loading,\n    getContactById\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"../contactsList/contacts-list.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts-operations\";\nimport contactsSelectors from \"../../redux/contacts-selectors\"\n\nfunction ContactListItem({ id, name, number, deleteContact }) {\n  return (\n    <li className={styles.contactList__item}>\n      <div className={styles.contacts}>\n        <span className={styles.name}>{name}</span>\n        <span className={styles.tel}>: {number}</span>\n      </div>\n      <Button\n        className={styles.btn}\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"button\"\n        id={id}\n        onClick={deleteContact}\n      >\n        delete Contact\n      </Button>\n    </li>\n  );\n}\nconst mapStateToProps = (state, ownProps) => {\n  const item = contactsSelectors.getContactById(state,ownProps.id);\n\n  return {\n    ...item\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deleteContact: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport styles from \"./contacts-list.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport contactsSelectors from \"../../redux/contacts-selectors\"\nimport  ContactListItem from \"../contactListItem/contactListItem\";\nfunction ContactList({ contactList, }) {\n  return (\n    <TransitionGroup\n      component=\"ul\"\n      \n      className={styles.contact__list}\n    >\n      {contactList.map(({id}) => {\n        return (\n          <CSSTransition key={id} timeout={250} unmountOnExit\n           classNames={styles}>\n            <ContactListItem\n              key={id}\n         id={id}\n            />\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\n\nconst mapStateToProps = (state)=> ({\n\n    contactList: contactsSelectors.getExistingContacts(state)\n\n})\n\nexport default connect(mapStateToProps, ) (ContactList);","import React from \"react\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\"\nimport contactsSelectors from \"../../redux/contacts-selectors\"\n\n\nconst Filter = ({ filter, getFilterName }) => {\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <TextField\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={e => getFilterName(e.target.value)}\n      />\n    </>\n  );\n};\nconst mapStateToProps = state => ({\n  \n  filter:contactsSelectors.getFilter(state)\n})\nconst mapDispatctToProps = {\n  getFilterName: contactsActions.getFilter\n}\n\nexport default connect(mapStateToProps, mapDispatctToProps) (Filter);\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./appTitle.css\";\n\nconst AppTitle = () => {\n    return (\n      <CSSTransition\n        appear={true}\n        in={true}\n        timeout={500}\n        unmountOnExit\n        classNames=\"AppTitle\"\n      >\n     \n          <h1 className=\"title\">PhoneBook</h1>\n       \n      </CSSTransition>\n    );\n}\nexport default AppTitle","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Form from './components/form/Form';\nimport ContactList from './components/contactsList/contactsList';\nimport Filter from './components/filter/Filter';\nimport styles from './global.module.css';\nimport AppTitle from '../src/components/appTitle/AppTitle';\nimport contactsOperations from '../src/redux/contacts-operations';\nimport contactsSelectors from './redux/contacts-selectors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  render() {\n    return (\n      <div className={styles.wrapper}>\n        <AppTitle />\n        {this.props.isLoading && <h1>Still Loading...</h1>}\n        <Form />\n\n        <Filter></Filter>\n\n        <ContactList></ContactList>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: contactsSelectors.loading(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}